version: '3.1'

services:
  # --- FRONTEND ---
  frontend:
    image: "redjack96/web_ui"
    ports:
      - "3000:3000"

  # --- API-GATEWAY ---
  api_gateway:
    image: "redjack96/api_gateway"
    volumes:
      - "./config.properties:/api_gateway/config.properties"
    ports:
      - "8007:8007"

  # --- APP-MICROSERVICES ---
  shopping_list:
    image: "redjack96/shopping_list"
    volumes:
      - "./config.properties:/usr/src/shopping_list/config.properties"
    ports:
      - "8001:8001"
    depends_on:
      - mongo


  product_storage:
    image: "redjack96/product_storage"
    depends_on:
      - kafka
    environment:
      TOPIC: notification
      ENVIRONMENT: local
      INTERNAL_KAFKA_ADDR: 'kafka:9092'
    ports:
      - "8002:8002"
    volumes:
      - "./config.properties:/product_storage/config.properties"


  notifications:
    image: "redjack96/notifications"
    ports:
      - "8005:8005"
    volumes:
      - "./config.properties:/notifications/src/main/resources/config.properties"
    depends_on:
      - product_storage
      - redis-notifications
      - kafka

  summary:
    image: "redjack96/summary"
    volumes:
      - "./config.properties:/summary/src/main/resources/config.properties"
#      - "/etc/timezone:/etc/timezone:ro"
#      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "8006:8006"
    depends_on:
      - influxdb
      - consumptions
      - kafka

  recipes:
    image: "redjack96/recipes"
    volumes:
      - "./config.properties:/usr/src/recipes/config.properties"
    ports:
      - "8003:8003"
    depends_on:
      - redis

  consumptions:
    image: "redjack96/consumptions"
    # restart: always
    ports:
      - "8004:8004"
    volumes:
      - "./config.properties:/usr/src/consumptions/config.properties"
    depends_on:
      - cassandra


  # --- KAFKA + ZOOKEEPER ---
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    # CREARE TOPIC
    # docker exec -it kafka /opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic notification
    image: bitnami/kafka:latest
    ports:
      - '9092:9092' # internal
      - '29092:29092' # localhost
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 # Forse qui va messo sdcc-demo_zookeeper
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LOG4J_LOGGERS="kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    depends_on:
      - zookeeper

  # --- DATABASES ---
  # for shopping list
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"

  # MongoDB UI
#  mongo-express:
#    image: mongo-express
#    restart: always
#    ports:
#      - "8081:8081"
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: example
#      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
#    depends_on:
#      - mongo

  # for summary
  influxdb:
    image: influxdb:latest
    ports:
      - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: password
      DOCKER_INFLUXDB_INIT_ORG: myorg
      DOCKER_INFLUXDB_INIT_BUCKET: krakend
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: token


  # for recipes
  redis:
    image: redis:latest
    ports:
      - '6379:6379'

#
  # for notification
  redis-notifications:
    image: redis:latest
    ports:
      - '6380:6379'


  # for consumptions
  cassandra:
    image: cassandra:latest
    ports:
      - '9042:9042'
    volumes:
      - 'cassandra_data:/appdata'
    environment:
#      - CASSANDRA_SEEDS=cassandra
#      - CASSANDRA_PASSWORD_SEEDER=yes
#      - CASSANDRA_PASSWORD=cassandra
      - CASSANDRA_START_RPC=true
      - CASSANDRA_CLUSTER_NAME=CassandraCluster
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=datacenter


volumes:
  influxdb-storage:
  cassandra_data:
    driver: local

# TODO: add external volumes for cassandra and influx
