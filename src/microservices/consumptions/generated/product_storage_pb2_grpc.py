# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import product_storage_pb2 as product__storage__pb2
import shopping_list_pb2 as shopping__list__pb2


class ProductStorageStub(object):
    """service which can be executed
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddBoughtProductsToPantry = channel.unary_unary(
                '/product_storage.ProductStorage/AddBoughtProductsToPantry',
                request_serializer=shopping__list__pb2.ProductList.SerializeToString,
                response_deserializer=shopping__list__pb2.Response.FromString,
                )
        self.AddProductToPantry = channel.unary_unary(
                '/product_storage.ProductStorage/AddProductToPantry',
                request_serializer=product__storage__pb2.Item.SerializeToString,
                response_deserializer=shopping__list__pb2.Response.FromString,
                )
        self.DropProductFromPantry = channel.unary_unary(
                '/product_storage.ProductStorage/DropProductFromPantry',
                request_serializer=product__storage__pb2.ItemName.SerializeToString,
                response_deserializer=shopping__list__pb2.Response.FromString,
                )
        self.UpdateProductInPantry = channel.unary_unary(
                '/product_storage.ProductStorage/UpdateProductInPantry',
                request_serializer=product__storage__pb2.Item.SerializeToString,
                response_deserializer=shopping__list__pb2.Response.FromString,
                )
        self.UseProductInPantry = channel.unary_unary(
                '/product_storage.ProductStorage/UseProductInPantry',
                request_serializer=product__storage__pb2.UsedItem.SerializeToString,
                response_deserializer=shopping__list__pb2.Response.FromString,
                )
        self.GetPantry = channel.unary_unary(
                '/product_storage.ProductStorage/GetPantry',
                request_serializer=product__storage__pb2.PantryMessage.SerializeToString,
                response_deserializer=product__storage__pb2.Pantry.FromString,
                )


class ProductStorageServicer(object):
    """service which can be executed
    """

    def AddBoughtProductsToPantry(self, request, context):
        """TODO: aggiungere nel messaggio di output il numero di prodotti aggiunti
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddProductToPantry(self, request, context):
        """manually added products
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropProductFromPantry(self, request, context):
        """manually or because used by recipes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProductInPantry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UseProductInPantry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPantry(self, request, context):
        """TODO: per ora restituisce l'intera dispensa. Forse e' un po' eccessivo!
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductStorageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddBoughtProductsToPantry': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBoughtProductsToPantry,
                    request_deserializer=shopping__list__pb2.ProductList.FromString,
                    response_serializer=shopping__list__pb2.Response.SerializeToString,
            ),
            'AddProductToPantry': grpc.unary_unary_rpc_method_handler(
                    servicer.AddProductToPantry,
                    request_deserializer=product__storage__pb2.Item.FromString,
                    response_serializer=shopping__list__pb2.Response.SerializeToString,
            ),
            'DropProductFromPantry': grpc.unary_unary_rpc_method_handler(
                    servicer.DropProductFromPantry,
                    request_deserializer=product__storage__pb2.ItemName.FromString,
                    response_serializer=shopping__list__pb2.Response.SerializeToString,
            ),
            'UpdateProductInPantry': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProductInPantry,
                    request_deserializer=product__storage__pb2.Item.FromString,
                    response_serializer=shopping__list__pb2.Response.SerializeToString,
            ),
            'UseProductInPantry': grpc.unary_unary_rpc_method_handler(
                    servicer.UseProductInPantry,
                    request_deserializer=product__storage__pb2.UsedItem.FromString,
                    response_serializer=shopping__list__pb2.Response.SerializeToString,
            ),
            'GetPantry': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPantry,
                    request_deserializer=product__storage__pb2.PantryMessage.FromString,
                    response_serializer=product__storage__pb2.Pantry.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'product_storage.ProductStorage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProductStorage(object):
    """service which can be executed
    """

    @staticmethod
    def AddBoughtProductsToPantry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product_storage.ProductStorage/AddBoughtProductsToPantry',
            shopping__list__pb2.ProductList.SerializeToString,
            shopping__list__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddProductToPantry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product_storage.ProductStorage/AddProductToPantry',
            product__storage__pb2.Item.SerializeToString,
            shopping__list__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DropProductFromPantry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product_storage.ProductStorage/DropProductFromPantry',
            product__storage__pb2.ItemName.SerializeToString,
            shopping__list__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProductInPantry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product_storage.ProductStorage/UpdateProductInPantry',
            product__storage__pb2.Item.SerializeToString,
            shopping__list__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UseProductInPantry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product_storage.ProductStorage/UseProductInPantry',
            product__storage__pb2.UsedItem.SerializeToString,
            shopping__list__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPantry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product_storage.ProductStorage/GetPantry',
            product__storage__pb2.PantryMessage.SerializeToString,
            product__storage__pb2.Pantry.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
