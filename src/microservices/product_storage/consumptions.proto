// version of protocol buffer used
syntax = "proto3";

// package name for the buffer will be used later
package consumptions;
option go_package = ".;proto_generated";

// service which can be executed
service Estimator {
  // This function should receive and return a stream of object
//  rpc Predict(stream BoughtProduct) returns (stream BuyMore);
  rpc Predict(PredictRequest) returns (PredictedDataList);
  rpc TrainModel(TrainRequest) returns (TrainResponse);
}

// argument

message PredictRequest {}

message PredictedDataList {
  repeated PredictedData predicted = 1;
}

enum ObservationType {
  added = 0;
  used = 1;
  expired = 2;
}

message TrainRequest {
  repeated Observation observations = 1;
  int64 currentDate = 2; // only to calculate the week referring to the product
}

message Observation {
  ObservationType requestType = 1;
  string productName = 2;
  int32 quantity = 3;
}

message PredictedData {
  string week = 1;
  string product = 2;
  float consumption = 3;
}

message TrainResponse {
  string msg = 1;
}
//message BoughtProduct {
//  int64 itemId = 1;
//  int32 quantity = 2;
//  string type = 3;
//  int32 buyDate = 4; // Date when this item was last bought
//  int32 useDate = 5; // Date of last use of the product
//  int32 firstExpiration = 6; // First expiration of product
//  bool usedInRecipy = 7; // true if used in a recipy (MS3)
//}
//
//// return value
//message BuyMore {
//  bool shouldBuy = 1; //true if should be added to shopping list, now
//}
